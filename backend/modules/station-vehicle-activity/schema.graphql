enum StationVehicleActivityTagStatus {
  LICENSE_PLATE
  IMEI
  IMSI
}

enum GetStationVehicleActivitySummaryCategory {
  DAY
  WEEK
  MONTH
  YEAR
  CUSTOM_DATE
}

type StationVehicleActivityImsi {
  status: RemarkState!
  imsi: String!
}
type StationVehicleActivityImei {
  status: RemarkState!
  imei: String!
}

type StationVehicleActivityLicensePlate {
  image: String
  license: String!
  type: String!
  status: DevicePermittedLabel!
}

type StationVehicleActivityVehicle {
  type: String!
}

type StationVehicleActivityColor {
  name: String!
  code: String!
}

type IMEI {
  list: [String!]
  total: Int!
}

type IMSI {
  list: [String!]
  total: Int!
}

type StationVehicleActivityTag {
  type: ActivityTagType!
  tag: String!
}

type StationVehicleActivity {
  id: String!
  arrivalTime: String!
  licensePlate: StationVehicleActivityLicensePlate!
  brand: String!
  vehicle: StationVehicleActivityVehicle!
  color: StationVehicleActivityColor!
  model: String!
  stationSite: String!
  imei: IMEI!
  imsi: IMSI!
  tags: [StationVehicleActivityTag!]
  remark: String!
}

type StationVehicleActivityConnection {
  pageInfo: PageInfo!
  edges: [StationVehicleActivity!]!
}

type StationVehicleActivitySummarySerie {
  label: String!
  data: [Int!]!
}

type StationVehicleActivitySummary {
  categories: [String!]!
  series: [StationVehicleActivitySummarySerie!]
}

type Mutation {
  createStationVehicleActivity(
    brand: String!
    color: String!
    model: String!
    status: RemarkState
  ): StationVehicleActivity! @stationApiAccess

  updateStationVehicleActivity(
    id: ID!
    brand: String
    color: String
    model: String
    status: RemarkState
  ): StationVehicleActivity! @access(requiredProjectId: true)
}

type Query {
  getStationVehicleActivities(
    limit: Int!
    skip: Int!
    stationId: ID!
  ): [StationVehicleActivity!] @access(requiredProjectId: true)

  getStationVehicleActivitySummary(
    stationId: ID!
    groupBy: GetStationVehicleActivitySummaryCategory!
    customDate: Time
  ): StationVehicleActivitySummary @access(requiredProjectId: true)

  getStationVehicleActivityById(id: ID!): StationVehicleActivity!
    @access(requiredProjectId: true)
}

type Subscription {
  onStationVehicleActityEvent(
    stationId: ID!
  ): StationVehicleActivity! @access(requiredProjectId: true)
}
